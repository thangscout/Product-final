{"version":3,"sources":["helpers/PrivateRoute.js","helpers/PublicRoute.js","helpers/formatCurrency.js","constant/index.js","reducers/users.js","reducers/categories.js","reducers/products.js","reducers/carts.js","reducers/index.js","stores/index.js","actions/products.js","actions/categories.js","components/Product-item.js","actions/carts.js","components/Category-item.js","components/Pagination.js","components/Sort-item.js","components/Filter-item.js","components/Home.js","components/Dashboard.js","actions/user.js","components/Login.js","components/user/Register.js","components/user/User-updateform.js","components/user/User.js","components/products/Products-detail.js","components/products/Products-filter.js","components/products/Products.js","components/categories/Categories-detail.js","components/categories/Categories.js","components/categories/Categories-create.js","components/products/Products-create.js","components/user/User-menu.js","components/carts/CartItem.js","components/carts/Carts.js","App.js","serviceWorker.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","localStorage","getItem","to","pathname","PublicRoute","formatCurrency","x","toLocaleString","style","currency","minimumFractionDigits","URI_FETCH","initState","user","undefined","token","submittingLogin","messageError","requestingRegister","isUser","listCategories","requestingAddCategory","requestingRemoveCategory","infoCategoryPrepareUpdate","requestingGetInfoCategory","updatingInfo","listProduct","requestingAddProduct","requestingRemoveProduct","infoProductPrepareUpdate","requestingGetInfoProduct","carts","totalPrice","totalAmount","combineReducers","users","state","arguments","length","action","type","payload","objectSpread","message","categories","concat","toConsumableArray","filter","category","is","_id","categoryID","_action$payload$categ","categoryIDUpdate","title","description","newArr","map","products","product","productID","_action$payload$produ","productIdNew","price","image","_action$payload","quantity","isExistItem","find","item","itemNewExist","parseInt","itemsWithoutExist","newCart","total","reduce","prevVal","currentVal","isProduct","newTotalPrice","newTotalAmount","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","getProducts","STORE","dispatch","axios","get","then","resp","respt","data","catch","err","console","log","addProduct","history","URI","formData","FormData","append","JSON","stringify","post","headers","content-type","push","removeProduct","delete","getInfoProduct","updateInfoProduct","put","productNew","goBack","getCategories","addCategory","removeCategory","getInfoCategory","updateInfoCategory","categoryNew","ProductItem","_handleChange","e","_e$target","target","name","value","_this","setState","defineProperty","_handleSubmitAddToCart","preventDefault","_this$props","addCart","_this2","this","react","className","width","margin","src","alt","webkitBoxOrient","onClick","onChange","connect","setTimeout","CategoryItem","Pagination","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","totalRecords","pageLimit","totalPages","currentPage","initialPage","pagesToShow","Math","ceil","prevProps","prevState","_this$state","setPage","page","_this$state2","onChangePage","startIndex","endIndex","min","startFromNumber","_this$state3","pages","floor","i","_this$state4","pager","getPager","index","key","SortItem","sort","_handleChangeSort","_handleChangeSortProduct","cursor","FilterItem","textKey","_handleFilter","_handleFilterProduct","placeholder","Home","componentDidMount","_callee","regenerator_default","wrap","_context","prev","next","stop","showProducts","result","Product_item","newListProduct","b","textkey","regexDemo","RegExp","search","listProductsPrevState","rowsPerPage","slice","Filter_item","react_router_dom","Category_item","Sort_item","components_Pagination","Dashboard","_Component","inherits","createClass","registerRequest","fullname","email","password","age","error","logout","removeItem","updateInfoUser","userID","userNew","Login","_handleSubmitLogin","loginRequest","_this$props$users","role","method","htmlFor","aria-hidden","setItem","infoUser","Register","_handleChangeValue","_handleChangeFile","files","_handleSubmitRegister","FormUser","nameImage","_handleSubmitUpdate","User","isUserPrevState","User_updateform","ProductDetail","_handleRemove","_handlecRemoveProduct","_handleUpdate","_this$props2","_handleGetInfoPrepareUpdate","_this$props3","scope","maxWidth","padding","ProductsFilter","Products","_this$props$products","Products_detail","Products_filter","CategoriesDetail","_handleRemoveCategory","join","Categories","_this$props$categorie","_","Categories_detail","CategoriesCreate","isUpdate","_handleSubmitAdd","cols","rows","ProductCreate","UserMenu","_handleLogout","borderWidth","borderRadius","display","CartItem","_handleRemoveItem","removeCart","Carts","_this$props$carts","carts_CartItem","App","Fragment","id","carts_Carts","User_menu","PublicRoute_PublicRoute","exact","path","PrivateRoute_PrivateRoute","ProductsCreate","Boolean","location","hostname","match","refreshApp","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6d16d6d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest}) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      localStorage.getItem('token') ?\r\n      <Component {...props}/> :\r\n      <Redirect to={{\r\n        pathname: '/login'\r\n      }}/>\r\n    )}\r\n  />\r\n)","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => (\r\n      <Component {...props}/>\r\n    )}\r\n  />\r\n)","export const formatCurrency = x => {\r\n  x = x.toLocaleString('en-US', {style : 'currency', currency : 'USD', minimumFractionDigits: 2});\r\n  return x;\r\n}","export const URI_FETCH = 'http://localhost:5000'","const initState = {\r\n  user: undefined,\r\n  token: '',\r\n  submittingLogin: false,\r\n  messageError: null,\r\n  requestingRegister: false,\r\n  isUser: undefined,\r\n}\r\n\r\nexport default function userReducer( state = initState, action){\r\n  switch(action.type){\r\n    case 'LOGIN_SUCCESSED':\r\n      return {\r\n        token: action.payload.token,\r\n        isUser: action.payload.isUser\r\n      }\r\n    case 'LOGIN_REQUEST':\r\n      return {\r\n        ...state,\r\n        submittingLogin: true\r\n      }\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        submittingLogin: false,\r\n        messageError: action.payload.message\r\n      }\r\n    case 'CLEAR_TOKEN':\r\n      return {}\r\n    case 'REGISTER':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      }\r\n    case 'REGISTER_REQUESTING':{\r\n        return {\r\n        ...state,\r\n        requestingRegister: true\r\n      }\r\n    }\r\n    case 'REGISTER_ERROR':\r\n      return {\r\n        ...state,\r\n        requestingRegister: false,\r\n        messageError: action.payload.message\r\n      }\r\n    case 'REGISTER_DONE':{\r\n        return {\r\n        ...state,\r\n        requestingRegister: false\r\n      }\r\n    }\r\n    case 'UPDATE_USER':\r\n    {\r\n      return {\r\n        ...state,\r\n        isUser: action.payload.user\r\n      }\r\n    }\r\n    case 'UPDATE_USER_REQUESTING':\r\n      return {\r\n        ...state,\r\n        updatingInfo: true\r\n      }\r\n    case 'UPDATE_USER_DONE':\r\n      return {\r\n        ...state,\r\n        updatingInfo: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initState = {\r\n  listCategories: [],\r\n  requestingAddCategory: false,\r\n  requestingRemoveCategory: '',\r\n  infoCategoryPrepareUpdate: undefined,\r\n  requestingGetInfoCategory: '',\r\n  updatingInfo: false\r\n}\r\n\r\nexport default function categoryReducer( state = initState, action ){\r\n  switch(action.type){\r\n    case 'GET_CATEGORIES':\r\n      return {\r\n        ...state,\r\n        listCategories: action.payload\r\n      };\r\n    case 'ADD_CATEGORY':\r\n      return {\r\n        ...state,\r\n        listCategories: [...state.listCategories , action.payload]\r\n      }\r\n    case 'ADD_CATEGORY_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingAddCategory: true\r\n      }\r\n    case 'ADD_CATEGORY_DONE':\r\n      return {\r\n        ...state,\r\n        requestingAddCategory: false\r\n      }\r\n    case 'REMOVE_CATEGORY': \r\n      return {\r\n        ...state,\r\n        listCategories: state.listCategories.filter(category => !Object.is(category._id, action.payload.categoryID))\r\n      }\r\n    case 'REMOVE_CATEGORY_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingRemoveCategory: action.payload.categoryID\r\n      }\r\n    case 'REMOVE_CATEGORY_DONE':\r\n      return {\r\n        ...state,\r\n        requestingRemoveCategory: ''\r\n      }\r\n    case 'GET_INFO_CATEGORY':\r\n      return {\r\n        ...state,\r\n        infoCategoryPrepareUpdate: action.payload.category\r\n      }\r\n    case 'GET_INFO_CATEGORY_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingGetInfoCategory: action.payload.categoryID\r\n      }\r\n    case 'GET_INFO_CATEGORY_DONE':\r\n      return {\r\n        ...state,\r\n        requestingGetInfoCategory: ''\r\n      }\r\n    case 'UPDATE_CATEGORY': {\r\n      let {_id: categoryIDUpdate, title, description } = action.payload.category;\r\n      let newArr = state.listCategories.map(category => {\r\n        if(category._id !== categoryIDUpdate) return category;\r\n        return {\r\n          ...category,\r\n          title, description\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        listCategories: newArr\r\n      }\r\n    }\r\n    case 'UPDATE_CATEGORY_REQUESTING':\r\n      return {\r\n        ...state,\r\n        updatingInfo: true\r\n      }\r\n    case 'UPDATE_CATEGORY_DONE':\r\n      return {\r\n        ...state,\r\n        updatingInfo: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initState = {\r\n  listProduct: [],\r\n  listCategories: [],\r\n  requestingAddProduct: false,\r\n  requestingRemoveProduct: '',\r\n  infoProductPrepareUpdate: undefined,\r\n  requestingGetInfoProduct: '',\r\n  updatingInfo: false\r\n}\r\n\r\nexport default function productReducer( state = initState, action){\r\n  switch(action.type){\r\n    case 'GET_PRODUCTS':\r\n      return {\r\n        ...state,\r\n        listProduct: action.payload.products,\r\n        listCategories: action.payload.categories\r\n      }\r\n    case 'ADD_PRODUCT':\r\n      return {\r\n        ...state,\r\n        listProduct: [...state.listProduct, action.payload]\r\n      }\r\n    case 'ADD_PRODUCT_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingAddProduct: true\r\n      }\r\n    case 'ADD_PRODUCT_DONE':\r\n      return {\r\n        ...state,\r\n        requestingAddProduct: false\r\n      }\r\n      case 'REMOVE_PRODUCT': \r\n      return {\r\n        ...state,\r\n        listProduct: state.listProduct.filter(product => !Object.is(product._id, action.payload.productID))\r\n      }\r\n    case 'REMOVE_PRODUCT_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingRemoveProduct: action.payload.productID\r\n      }\r\n    case 'REMOVE_PRODUCT_DONE':\r\n      return {\r\n        ...state,\r\n        requestingRemoveProduct: ''\r\n      }\r\n    case 'GET_INFO_PRODUCT':\r\n      return {\r\n        ...state,\r\n        infoProductPrepareUpdate: action.payload.product\r\n      }\r\n    case 'GET_INFO_PRODUCT_REQUESTING':\r\n      return {\r\n        ...state,\r\n        requestingGetInfoProduct: action.payload.productID\r\n      }\r\n    case 'GET_INFO_PRODUCT_DONE':\r\n      return {\r\n        ...state,\r\n        requestingGetInfoProduct: ''\r\n      }\r\n    case 'UPDATE_PRODUCT':\r\n    {\r\n      let { _id: productIdNew, title, description, price, categoryID, image} = action.payload.product;\r\n      let newArr = state.listProduct.map(product => {\r\n        if(product._id !== productIdNew) return product;\r\n        return {\r\n          ...product,\r\n          title, description, price, categoryID, image\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        listProduct: newArr\r\n      }\r\n    }\r\n    case 'UPDATE_PRODUCT_REQUESTING':\r\n      return {\r\n        ...state,\r\n        updatingInfo: true\r\n      }\r\n    case 'UPDATE_PRODUCT_DONE':\r\n      return {\r\n        ...state,\r\n        updatingInfo: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initState = {\r\n carts: [],\r\n totalPrice: 0,\r\n totalAmount: 0\r\n}\r\n\r\nexport default function cartReducer( state = initState, action) {\r\n  switch (action.type) {\r\n    case 'ADD_CART': {\r\n      const { product, quantity } = action.payload;\r\n      let isExistItem = state.carts.find(item => Object.is(item.product._id, product._id));\r\n\r\n      if(isExistItem) {\r\n        let itemNewExist = {\r\n          ...isExistItem,\r\n          quantity: parseInt(isExistItem.quantity) + parseInt(quantity)\r\n        };\r\n\r\n        let itemsWithoutExist = state.carts.filter(item => !Object.is(item.product._id, product._id));\r\n        let newCart = [...itemsWithoutExist, itemNewExist]\r\n\r\n        // let totalPrice = newCart.reduce((prevVal, currentVal) => {\r\n        //   const { quantity, product: { price }} = currentVal;\r\n        //   let totalPriceOfItem = parseInt(quantity) * parseInt(price);\r\n        //   return prevVal + totalPriceOfItem;\r\n        // }, 0);\r\n        let total = newCart.reduce((prevVal, currentVal) => {\r\n          const { quantity, product: { price }} = currentVal;\r\n          const { totalPrice, totalAmount} = prevVal;\r\n\r\n          let totalPriceOfItem = parseInt(quantity) * price;\r\n          let newtotalPrice = totalPrice + totalPriceOfItem;\r\n\r\n          let totalQuantity = parseInt(quantity) + totalAmount;\r\n          return { \r\n            totalPrice: newtotalPrice,\r\n            totalAmount: totalQuantity\r\n          }\r\n        }, { totalPrice: 0, totalAmount: 0});\r\n\r\n        return {\r\n          carts: newCart, \r\n          totalPrice: total.totalPrice,\r\n          totalAmount: total.totalAmount\r\n        }\r\n      }else {\r\n        let newCart = [...state.carts, { product, quantity}]\r\n\r\n        let total = newCart.reduce((prevVal, currentVal) => {\r\n          let { quantity, product: { price }} = currentVal;\r\n          const { totalPrice, totalAmount} = prevVal;\r\n          \r\n          let totalPriceOfItem = parseInt(quantity) * price;\r\n          let newtotalPrice = totalPrice + totalPriceOfItem;\r\n\r\n          let totalQuantity = parseInt(quantity) + totalAmount;\r\n          return { \r\n            totalPrice: newtotalPrice,\r\n            totalAmount: totalQuantity\r\n          }\r\n        }, { totalPrice: 0, totalAmount: 0});\r\n\r\n        return {\r\n          ...state,\r\n          carts: newCart, \r\n          totalPrice: total.totalPrice,\r\n          totalAmount: total.totalAmount\r\n        }\r\n      }      \r\n    }      \r\n    case 'REMOVE_CART': {\r\n      let { totalPrice, carts, totalAmount } = state;\r\n      \r\n      let isProduct = carts.find(item => item.product._id === action.payload);\r\n      let newTotalPrice = totalPrice - (parseInt(isProduct.quantity) * parseInt(isProduct.product.price));\r\n      let newTotalAmount = totalAmount - parseInt(isProduct.quantity);\r\n\r\n      return {\r\n        ...state,\r\n        carts: state.carts.filter(item => !Object.is(item.product._id, action.payload)),\r\n        totalPrice: newTotalPrice,\r\n        totalAmount: newTotalAmount\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport USERS from './users';\r\nimport CATEGORIES from './categories';\r\nimport PRODUCTS from './products';\r\nimport CARTS from './carts';\r\n\r\nexport default combineReducers({\r\n  users: USERS,\r\n  categories: CATEGORIES,\r\n  products: PRODUCTS,\r\n  carts: CARTS\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initState  = { };\r\n\r\nconst store = createStore(rootReducer, initState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import axios from 'axios';\r\nimport { URI_FETCH } from '../constant/index';\r\nimport STORE from '../stores';\r\n\r\nexport const getProducts = () => {\r\n  STORE.dispatch({\r\n    type: 'GET_PRODUCTS_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  axios.get(`${URI_FETCH}/products`)\r\n    .then(resp => {\r\n      let respt = resp.data;\r\n      STORE.dispatch({\r\n        type: 'GET_PRODUCTS',\r\n        payload: respt.data\r\n      })\r\n    })\r\n    .catch(err => console.log({ err }));\r\n}\r\n\r\nexport const addProduct = (title, description, price, categoryID, image, history ) => {\r\n  STORE.dispatch({\r\n    type: 'ADD_PRODUCT_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/products`;\r\n  const formData = new FormData();\r\n  formData.append('image', image);\r\n\r\n  const data = JSON.stringify({ title, description, price, categoryID });\r\n  formData.append('data', data);\r\n\r\n  // console.log({title, description, price, categoryID, image})\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n\r\n  axios.post(URI, formData, config)\r\n    .then(resp => {\r\n      let respt = resp.data;\r\n      STORE.dispatch({\r\n        type: 'ADD_PRODUCT',\r\n        payload: respt.data\r\n      });\r\n      STORE.dispatch({\r\n        type: 'ADD_PRODUCT_DONE',\r\n        payload: null\r\n      });\r\n      history.push('/dashboard/products');\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'ADD_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err })\r\n    });\r\n}\r\n\r\nexport const removeProduct = productID => {\r\n  \r\n  STORE.dispatch({\r\n    type: 'REMOVE_PRODUCT_REQUESTING',\r\n    payload: {\r\n      productID\r\n    }\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/products/${productID}`;\r\n\r\n  axios.delete(URI)\r\n    .then( resp => {\r\n      const respt = resp.data;\r\n      const { data: { _id: productID}} = respt;\r\n      STORE.dispatch({\r\n        type: 'REMOVE_PRODUCT',\r\n        payload: {\r\n          productID\r\n        }\r\n      });\r\n\r\n      STORE.dispatch({\r\n        type: 'REMOVE_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n    })\r\n    .catch( err => {\r\n      STORE.dispatch({\r\n        type: 'REMOVE_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err: err.message })\r\n    })\r\n}\r\n\r\nexport const getInfoProduct = (productID, history) => {\r\n  \r\n  STORE.dispatch({\r\n    type: 'GET_INFO_PRODUCT_REQUESTING',\r\n    payload: {\r\n      productID\r\n    }\r\n  })\r\n\r\n  const URI = `${URI_FETCH}/products/${productID}`;\r\n  axios.get(URI)\r\n    .then( resp => {\r\n      const respt = resp.data;\r\n      const { data: product } = respt;\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_PRODUCT',\r\n        payload: {\r\n          product\r\n        }\r\n      });\r\n\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err: err.message});\r\n    })\r\n}\r\n\r\nexport const updateInfoProduct = (productID, title, description, price, categoryID, image, history) => {\r\n  STORE.dispatch({\r\n    type: 'UPDATE_PRODUCT_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/products/${productID}`;\r\n  const formData = new FormData();\r\n  formData.append('image', image);\r\n\r\n  const data = JSON.stringify({ title, description, price, categoryID});\r\n  formData.append('data', data);\r\n\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n\r\n  axios.put(URI, formData, config)\r\n    .then(resp => {\r\n      const respt = resp.data;\r\n      const { data: productNew} = respt;\r\n      STORE.dispatch({\r\n        type: 'UPDATE_PRODUCT',\r\n        payload: {\r\n          product: productNew\r\n        }\r\n      });\r\n      STORE.dispatch({\r\n        type: 'UPDATE_PRODUCT_DONE',\r\n        payload: null\r\n      });\r\n      history.goBack();\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'UPDATE_PRODUCT_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err });\r\n    })\r\n\r\n}","import axios from 'axios';\r\nimport { URI_FETCH } from '../constant/index';\r\nimport STORE from '../stores';\r\n\r\nexport const getCategories = () => {\r\n  STORE.dispatch({\r\n    type:'GET_CATEGORIES_REQUESTING',\r\n    payload: null\r\n  })\r\n  axios.get(`${URI_FETCH}/categories`)\r\n    .then(resp =>{\r\n      let respt = resp.data;\r\n      STORE.dispatch({\r\n        type: 'GET_CATEGORIES',\r\n        payload: respt.data\r\n      })\r\n    })\r\n    .catch(err => console.log({ err}));\r\n}\r\n\r\nexport const addCategory = (title, description, history) => {\r\n\r\n  STORE.dispatch({\r\n    type: 'ADD_CATEGORY_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  axios.post(`${URI_FETCH}/categories`, { title, description})\r\n    .then(resp => {\r\n      let respt = resp.data;\r\n      STORE.dispatch({\r\n        type: 'ADD_CATEGORY',\r\n        payload: respt.data\r\n      });\r\n      STORE.dispatch({\r\n        type: 'ADD_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      // history.goBack();\r\n      history.push('/dashboard/categories');\r\n\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'ADD_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err})\r\n    });\r\n}\r\n\r\nexport const removeCategory = categoryID => {\r\n  \r\n  STORE.dispatch({\r\n    type: 'REMOVE_CATEGORY_REQUESTING',\r\n    payload: {\r\n      categoryID\r\n    }\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/categories/${categoryID}`;\r\n\r\n  axios.delete(URI)\r\n    .then( resp => {\r\n      const respt = resp.data;\r\n      const { data: { _id: categoryID}} = respt;\r\n      STORE.dispatch({\r\n        type: 'REMOVE_CATEGORY',\r\n        payload: {\r\n          categoryID\r\n        }\r\n      });\r\n\r\n      STORE.dispatch({\r\n        type: 'REMOVE_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n    })\r\n    .catch( err => {\r\n      STORE.dispatch({\r\n        type: 'REMOVE_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err: err.message })\r\n    })\r\n}\r\n\r\nexport const getInfoCategory = (categoryID, history) => {\r\n  \r\n  STORE.dispatch({\r\n    type: 'GET_INFO_CATEGORY_REQUESTING',\r\n    payload: {\r\n      categoryID\r\n    }\r\n  })\r\n\r\n  const URI = `${URI_FETCH}/categories/${categoryID}`;\r\n  axios.get(URI)\r\n    .then( resp => {\r\n      const respt = resp.data;\r\n      const { data: category } = respt;\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_CATEGORY',\r\n        payload: {\r\n          category\r\n        }\r\n      });\r\n\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'GET_INFO_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err: err.message});\r\n    })\r\n}\r\nexport const updateInfoCategory = (categoryID, title, description, history) => {\r\n\r\n  STORE.dispatch({\r\n    type: 'UPDATE_CATEGORY_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/categories/${categoryID}`;\r\n  axios.put(URI, {title, description})\r\n    .then(resp => {\r\n      const respt = resp.data;\r\n      const { data: categoryNew } = respt;\r\n      STORE.dispatch({\r\n        type: 'UPDATE_CATEGORY',\r\n        payload: {\r\n          category: categoryNew\r\n        }\r\n      });\r\n\r\n      STORE.dispatch({\r\n        type: 'UPDATE_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      history.goBack();\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'UPDATE_CATEGORY_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err });\r\n    })\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { URI_FETCH } from '../constant';\r\nimport { formatCurrency } from '../helpers';\r\nimport { addCart } from '../actions/carts';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductItem extends Component {\r\n  state = {\r\n    quantity: 1\r\n  }\r\n\r\n  _handleChange = e => {\r\n    const { name, value } = e.target;\r\n    if(value < 1){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  _handleSubmitAddToCart = e => {\r\n    e.preventDefault();\r\n    const { quantity } = this.state;\r\n    const { product, addCart } = this.props;\r\n    console.log({ quantity, product})\r\n    addCart(product, quantity)\r\n  }\r\n\r\n  render(){\r\n    const { product } = this.props;\r\n    const { quantity } = this.state;\r\n    // let category = listCategories.find(category => Object.is(category._id, product.categoryID));\r\n    return(\r\n      <Fragment>\r\n        <div className=\"card mb-5\" style={{width: '16rem', margin: '0 12px'}}>\r\n        <img src={product.image ? `${URI_FETCH}/images/products/${product.image}` : 'https://via.placeholder.com/100' } \r\n          alt=\"\"\r\n          className=\"card-img-top\"\r\n        />\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">{product.title && product.title}</h4>\r\n          <p className=\"card-description\"\r\n            style={{webkitBoxOrient: \"vertical\"}}\r\n          >\r\n            {product.description && product.description}\r\n          </p>\r\n          {/* <p className=\"card-text font-italic\">{category && category.title}</p> */}\r\n          <b className=\"card-text d-block mb-3\">{product.price && formatCurrency(product.price)}</b>\r\n          <div className=\"d-flex\">\r\n            <button className=\"btn btn-success\"\r\n              onClick={e => this._handleSubmitAddToCart(e)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n            <input className=\"form-control ml-3\" type=\"number\" name=\"quantity\" value={quantity}\r\n              style={{width: \"40%\"}}\r\n              onChange={e => this._handleChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addCart }) (ProductItem);","export const addCart = (product, quantity) => {\r\n  return dispatch => {\r\n    setTimeout(() => (\r\n      dispatch({\r\n        type: 'ADD_CART',\r\n        payload: {\r\n          product, quantity\r\n        }\r\n      })\r\n    ))    \r\n  } \r\n}\r\n\r\nexport const removeCart = productID => {\r\n  return dispatch => {\r\n    return dispatch({\r\n      type: 'REMOVE_CART',\r\n      payload: productID\r\n    })\r\n  }\r\n}","import React, { Fragment, Component } from 'react';\r\n\r\nclass CategoryItem extends Component {\r\n  render(){\r\n    const {item} = this.props;\r\n    return(\r\n      <Fragment>\r\n        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n          {item.title}\r\n          <span className=\"badge badge-success badge-pill\">{item.products.length}</span>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React, { Fragment, Component } from 'react';\r\n\r\nclass Pagination extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      totalRecords: '',\r\n      pageLimit: '',\r\n      totalPages: '',\r\n      currentPage: '',\r\n      initialPage: '',\r\n      pagesToShow: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { totalRecords, pageLimit, initialPage, pagesToShow} = this.props;\r\n    this.setState({\r\n      totalRecords: totalRecords,\r\n      pageLimit: pageLimit || 10,\r\n      totalPages: Math.ceil(totalRecords / pageLimit),\r\n      pagesToShow: pagesToShow || 5,\r\n      currentPage: initialPage || 1\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const { totalRecords, pageLimit, currentPage} = this.state;\r\n    if(\r\n      totalRecords !== prevState.totalRecords ||\r\n      pageLimit !== prevState.pageLimit\r\n    ){\r\n      this.setPage(currentPage)\r\n    }\r\n  }\r\n\r\n  setPage(page){\r\n    let { totalRecords, pageLimit, totalPages } = this.state;\r\n    let { onChangePage } = this.props;\r\n\r\n    if(page < 1 ){\r\n      page = 1;\r\n    }else if(page > totalPages){\r\n      page = totalPages;\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: page\r\n    })\r\n\r\n    let startIndex = (page - 1) * pageLimit;\r\n    let endIndex = Math.min(startIndex + pageLimit - 1, totalRecords -1);\r\n\r\n    onChangePage({\r\n      pageLimit,\r\n      totalPages,\r\n      page,\r\n      startIndex,\r\n      endIndex\r\n    });\r\n  }\r\n\r\n  getPager(){\r\n    let { pagesToShow, currentPage, totalPages } = this.state;\r\n    let pages = [], startFromNumber;\r\n\r\n    if(totalPages <= pagesToShow){\r\n      startFromNumber = 1;\r\n      pagesToShow = totalPages;\r\n    }else{\r\n      if(currentPage <= Math.ceil(pagesToShow / 2)){\r\n        startFromNumber = 1;\r\n      }else if( currentPage + Math.floor((pagesToShow - 1) / 2) >= totalPages){\r\n        startFromNumber = totalPages - ( pagesToShow - 1);\r\n      }else{\r\n        startFromNumber = currentPage - Math.floor(pagesToShow / 2);\r\n      }\r\n    }\r\n    for(let i = 1; i <= pagesToShow; i++){\r\n      pages.push(startFromNumber++);\r\n    }\r\n\r\n    return {\r\n      currentPage,\r\n      totalPages,\r\n      pages\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { totalRecords, totalPages } = this.state;\r\n    if(!totalRecords || totalPages === 1) return null;\r\n\r\n    let pager = this.getPager();\r\n\r\n    return(\r\n      <Fragment>\r\n        <ul className=\"pagination\">\r\n          <li className={pager.currentPage === 1 ? 'page-item disabled': 'page-item'}>\r\n            <button\r\n              className=\"page-link\"\r\n              onClick={()=> this.setPage(pager.currentPage - 1)}\r\n            >\r\n              Prev\r\n            </button>\r\n          </li>\r\n          {\r\n            pager.pages.map((page, index) => (\r\n              <li key={index} className={pager.currentPage === page ? 'page-item active': 'page-item'}>\r\n                <button \r\n                  className=\"page-link\"\r\n                  onClick={() => this.setPage(page)}\r\n                >\r\n                  {page}\r\n                </button>\r\n              </li>\r\n            ))\r\n          }\r\n          <li className={pager.currentPage === pager.totalPages ? 'page-item disabled': 'page-item'}>\r\n            <button \r\n              className=\"page-link\"\r\n              onClick={()=> this.setPage(pager.currentPage + 1)}\r\n            >\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;","import React, { Fragment, Component } from 'react';\r\n\r\nclass SortItem extends Component {\r\n  \r\n  state = {\r\n    sort: ''\r\n  }\r\n\r\n  _handleChangeSort = e => {\r\n    const { _handleChangeSortProduct } = this.props;\r\n    this.setState({\r\n      sort: e.target.value\r\n    });\r\n\r\n    _handleChangeSortProduct(e.target.value)\r\n  }\r\n\r\n  render(){\r\n\r\n    const { sort } = this.state;\r\n\r\n    return(\r\n      <Fragment>\r\n          <div className=\"col-md-4 ml-auto mb-4\">\r\n            <select \r\n              className=\"form-control\" \r\n              name=\"sort\"\r\n              onChange={e => this._handleChangeSort(e)}\r\n              value={sort}\r\n              style={{cursor: 'pointer'}}\r\n              >\r\n              <option value=\"\">Default sorting</option>\r\n              <option value=\"lowest\">Low to Hight</option>\r\n              <option value=\"highest\">Hight to Low</option>\r\n            </select>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortItem;","import React, { Fragment, Component } from 'react';\r\n\r\nclass FilterItem extends Component {\r\n  state = {\r\n    textKey: ''\r\n  }\r\n  \r\n  _handleFilter = e => {\r\n    const { _handleFilterProduct } = this.props;\r\n    this.setState({\r\n      textKey: e.target.value\r\n    });\r\n    _handleFilterProduct(e.target.value)\r\n  }\r\n  render(){\r\n    const { textKey } = this.state;\r\n    return(\r\n      <Fragment>\r\n        <input \r\n          className=\"form-control\" \r\n          type=\"text\" \r\n          name=\"textKey\" \r\n          value={textKey}\r\n          onChange={e => this._handleFilter(e)}\r\n          placeholder=\"Enter product name\">\r\n        </input>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterItem;","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts } from '../actions/products';\r\nimport { getCategories } from '../actions/categories';\r\nimport ProductItem from './Product-item';\r\nimport CategoryItem from './Category-item';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from '../components/Pagination';\r\nimport SortItem from '../components/Sort-item';\r\nimport FilterItem from '../components/Filter-item';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    startIndex: '',\r\n    endIndex: '',\r\n    totalRecords: '',\r\n    totalPages: '',\r\n    pageLimit: 12,\r\n    currentPage: '',\r\n    listProduct: null\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    getProducts();\r\n    getCategories();\r\n  }\r\n\r\n  showProducts = listProduct => {\r\n    var result = null;\r\n    if(listProduct.length > 0){\r\n      result = listProduct.map((product, index)=> (\r\n        <ProductItem \r\n        product={product}\r\n        key={index}\r\n      />\r\n      ))\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  onChangePage = data => {\r\n    this.setState({\r\n      totalPages: data.totalPages,\r\n      currentPage: data.page,\r\n      startIndex: data.startIndex,\r\n      endIndex: data.endIndex\r\n    });\r\n  }\r\n\r\n  _handleChangeSortProduct = sort => {\r\n    const { listProduct } = this.state;\r\n    switch(sort){\r\n      case 'lowest': {\r\n        let newListProduct = listProduct.sort(( a, b ) => a.price - b.price);\r\n        return this.setState({\r\n          listProduct: newListProduct\r\n        })\r\n      }\r\n      case 'highest': {\r\n        let newListProduct = listProduct.sort(( a, b) => b.price - a.price);\r\n        return this.setState({\r\n          listProduct: newListProduct\r\n        })\r\n      }\r\n      default: {\r\n        return listProduct;\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleFilterProduct = textkey => {\r\n    const { listProduct } = this.state;\r\n    // console.log({ textkey});\r\n    \r\n    let regexDemo = new RegExp(textkey, 'ig');\r\n    let newListProduct = listProduct.filter(product => {\r\n      return product.title.search(regexDemo) !== -1;\r\n    });\r\n     this.setState({\r\n      listProduct: newListProduct\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { listProduct: listProductsPrevState } = prevState;\r\n    const { listProduct } = this.props.products; //STORE\r\n\r\n    if( listProduct && listProduct !== listProductsPrevState) {\r\n      this.setState({\r\n        listProduct\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    // let { products:{ listProduct }, categories: {listCategories}} = this.props;\r\n    let { categories: {listCategories}} = this.props;\r\n    const { startIndex, endIndex, pageLimit, listProduct, sort} = this.state;\r\n    let rowsPerPage = [];\r\n    if(listProduct && listProduct.length > 0){\r\n      rowsPerPage = listProduct.slice(startIndex, endIndex + 1);\r\n    }\r\n    // console.log({listCategories})\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid mt-4 mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2\">\r\n             <div className=\"sibar-categories\">\r\n               <FilterItem _handleFilterProduct={this._handleFilterProduct}/>\r\n                <h3 className=\"categories-title mt-3\"><Link to=\"/dashboard/categories\">Categories</Link></h3>\r\n                <ul className=\"list-group\">\r\n                  {\r\n                    listCategories.length > 0 && listCategories.map((item, index)=> (\r\n                      <CategoryItem item={item} key={index}/> \r\n                    ))\r\n                  }\r\n                </ul>\r\n             </div>\r\n            </div>\r\n            <div className=\"col-md-10\">\r\n              <div className=\"row\">\r\n                <SortItem\r\n                  sort={sort}\r\n                  _handleChangeSortProduct={this._handleChangeSortProduct}\r\n                />\r\n              </div>\r\n              <div className=\"row\">\r\n                {\r\n                  listProduct && listProduct.length > 0 && this.showProducts(rowsPerPage)\r\n                }\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 d-flex justify-content-center\">\r\n                  {\r\n                    listProduct && listProduct.length > 0 ?\r\n                      <Pagination\r\n                        totalRecords={ listProduct.length}\r\n                        pageLimit={pageLimit || 10}\r\n                        initialPage={1}\r\n                        pagesToShow={5}\r\n                        onChangePage={this.onChangePage}\r\n                      /> : ''\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products,\r\n  categories: state.categories\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Home);\r\n","import React, { Fragment, Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Dashboard extends Component {\r\n  render(){\r\n    return(\r\n      <Fragment>\r\n        <nav className=\"nav\">\r\n          <span className=\"nav-link\">\r\n            <Link to=\"/dashboard/my-account\">My account</Link>\r\n          </span>\r\n          <span className=\"nav-link\">\r\n            <Link to=\"/dashboard/products\">Products</Link>\r\n          </span>\r\n          <span className=\"nav-link\">\r\n            <Link to=\"/dashboard/categories\">Categories</Link>\r\n          </span>\r\n      </nav>\r\n    </Fragment>\r\n  );\r\n  }\r\n}","import axios from 'axios';\r\nimport { URI_FETCH } from '../constant';\r\nimport STORE from '../stores';\r\n\r\nexport const loginRequest = ({ email, password, history}) => {\r\n  return function(dispatch){\r\n    dispatch({\r\n      type: 'LOGIN_REQUEST',\r\n      payload: null\r\n    })\r\n\r\n    return axios.post(`${URI_FETCH}/login`, { email, password })\r\n      .then(resp => {\r\n        const respt = resp.data;\r\n        if(respt.error){\r\n          dispatch({\r\n            type: 'LOGIN_ERROR',\r\n            payload: {\r\n              message: respt.message\r\n            }\r\n          })\r\n        }else if( !respt.error){\r\n          localStorage.setItem('token', respt.data.token);\r\n          dispatch({\r\n            type: 'LOGIN_SUCCESSED',\r\n            payload: {\r\n              token: respt.data.token,\r\n              isUser: respt.data.infoUser\r\n            }\r\n          });\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        dispatch({\r\n          type: 'LOGIN_ERROR',\r\n          payload: {\r\n            message: err.message\r\n          }\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const refreshApp = () => {\r\n  let token = localStorage.getItem('token');\r\n  if(!token)\r\n    return STORE.dispatch({\r\n      type: 'CLEAR_TOKEN',\r\n      payload: null\r\n    })\r\n  axios.get(`${URI_FETCH}/refresh-token/${token}`)\r\n    .then( resp => {\r\n      let respt = resp.data;\r\n      return STORE.dispatch({\r\n        type: 'LOGIN_SUCCESSED',\r\n        payload: {\r\n          token: respt.data.token,\r\n          isUser: respt.data.infoUser\r\n        }\r\n      })\r\n    })\r\n    .catch(err => console.log({ err: err.message}));\r\n}\r\n\r\nexport const registerRequest = (fullname, email, password, age, image, history) => {\r\n\r\n  STORE.dispatch({\r\n    type: 'REGISTER_REQUESTING',\r\n    payload: null\r\n  })\r\n\r\n  const URI = `${URI_FETCH}/users`;\r\n  const formData = new FormData();\r\n\r\n  //Attach image\r\n  formData.append('image', image);\r\n\r\n  //Attach data\r\n  const data = JSON.stringify({ fullname, email, password, age});\r\n  formData.append('data', data);\r\n\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n\r\n  axios.post(URI, formData, config)\r\n    .then(resp => {\r\n      let respt = resp.data;\r\n      if(respt.error){\r\n        setTimeout(() => {\r\n          STORE.dispatch({\r\n            type:'REGISTER_ERROR',\r\n            payload:{\r\n              message: respt.message\r\n            }\r\n          })\r\n        }, 1500)\r\n      }else if( !respt.error){\r\n        STORE.dispatch({\r\n          type: 'REGISTER',\r\n          payload: respt.data\r\n        });\r\n        STORE.dispatch({\r\n          type: 'REGISTER_DONE',\r\n          payload: null\r\n        });\r\n        history.goBack();\r\n        console.log({history})\r\n      }   \r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'REGISTER_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err })\r\n    });\r\n}\r\n\r\nexport const logout = () => {\r\n  setTimeout(() => {\r\n    localStorage.removeItem('token');\r\n    STORE.dispatch({\r\n      type: 'CLEAR_TOKEN',\r\n      payload: null\r\n    });\r\n  }, 1500);\r\n}\r\n\r\nexport const updateInfoUser = (userID, fullname, email, password, age, image) => {\r\n  STORE.dispatch({\r\n    type: 'UPDATE_USER_REQUESTING',\r\n    payload: null\r\n  });\r\n\r\n  const URI = `${URI_FETCH}/users/${userID}`;\r\n  const formData = new FormData();\r\n  formData.append('image', image);\r\n\r\n  const data = JSON.stringify({ fullname, email, password, age});\r\n  formData.append('data', data);\r\n\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  }\r\n\r\n  axios.put(URI, formData, config)\r\n    .then(resp => {\r\n      const respt = resp.data;\r\n      console.log({ respt})\r\n      const { data: userNew} = respt;\r\n      STORE.dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: {\r\n          user: userNew\r\n        }\r\n      });\r\n      STORE.dispatch({\r\n        type: 'UPDATE_USER_DONE',\r\n        payload: null\r\n      });\r\n    })\r\n    .catch(err => {\r\n      STORE.dispatch({\r\n        type: 'UPDATE_USER_DONE',\r\n        payload: null\r\n      })\r\n      console.log({ err });\r\n    })\r\n\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { loginRequest } from '../actions/user';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  _handleChange = e => {\r\n    const { name, value} = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  _handleSubmitLogin = e => {\r\n    e.preventDefault();\r\n\r\n    const { email, password} = this.state;\r\n    let { loginRequest, history } = this.props;\r\n    loginRequest({ email, password, history});\r\n  }\r\n\r\n  render(){\r\n    const { email, password} = this.state;\r\n    const { users: { submittingLogin, messageError } } = this.props;\r\n    return(\r\n      <Fragment> \r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-6 col-xs-12 mb-5\">\r\n              <h2 className=\"mt-5 mb-4\">Login</h2>\r\n              {\r\n                messageError && <p className=\"alert alert-danger pt-2 pb-2\" role=\"alert\">\r\n                  {Object.is(messageError, 'EMAIL_NOT_EXIST') && 'Email is existence'}\r\n                  {Object.is(messageError, 'PASSWORD_NOT_MATCHING') && 'Password not matching'}\r\n                  {Object.is(messageError, 'ERR_HTTP_HEADERS_SENT') && 'Cannot conntect to sever'}\r\n                  {/* {messageError && 'Cannot conntect to sever'} */}\r\n                </p>\r\n              }\r\n              <form method=\"post\">\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"email\">\r\n                    Email\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"email\" \r\n                          type=\"email\"\r\n                          value={email}\r\n                          onChange={e => this._handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"password\">\r\n                    Password\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"password\" \r\n                          type=\"text\"\r\n                          value={password}\r\n                          onChange={e => this._handleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group pt-3\">\r\n                  <div>\r\n                    <button className=\"btn btn-primary \" \r\n                            name=\"submit\" \r\n                            type=\"submit\"\r\n                            onClick={e => this._handleSubmitLogin(e)} >\r\n                      Login\r\n                      {submittingLogin ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n              <Link to='/users'>Register</Link> for a new account.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.users\r\n});\r\n\r\nexport default connect(mapStateToProps, {loginRequest})(Login);","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { registerRequest } from '../../actions/user';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    fullname:'',\r\n    email: '',\r\n    password: '',\r\n    age: '',\r\n    image: null\r\n  }\r\n\r\n  _handleChangeValue = e => {\r\n    const { name, value } = e.target;\r\n    if(value < 1){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  _handleChangeFile = e => {\r\n    this.setState({\r\n      image: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  _handleSubmitRegister = e => {\r\n    e.preventDefault();\r\n    \r\n    const { fullname, email, password, age, image } = this.state;\r\n    const { history} = this.props;\r\n    registerRequest( fullname, email, password, age, image, history );\r\n  }\r\n\r\n  render(){\r\n    const { fullname, email, password, age } = this.state;\r\n    let { users: {requestingRegister, messageError} } = this.props;\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n            <h2 className=\"mt-5 mb-4\">Register</h2>\r\n              {\r\n                messageError && <p className=\"alert alert-danger pt-2 pb-2\" role=\"alert\">\r\n                  {Object.is(messageError, 'FULLNAME_EMAIL_IS_REQUIRED') && 'Please enter Fullname and Email'}\r\n                  {Object.is(messageError, 'EMAIL_IS_EXIST') && 'Email is existence'}\r\n                </p>\r\n              }\r\n              <form method=\"post\">\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"fullname\">\r\n                    Fullname\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"fullname\" \r\n                          type=\"text\"\r\n                          value={fullname}\r\n                          onChange={e => this._handleChangeValue(e)} />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"email\">\r\n                    Email\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"email\" \r\n                          type=\"text\"\r\n                          value={email}\r\n                          onChange={e => this._handleChangeValue(e)}  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"password\">\r\n                    Password\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"password\" \r\n                          type=\"text\"\r\n                          value={password}\r\n                          onChange={e => this._handleChangeValue(e)}  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label \" htmlFor=\"age\">\r\n                    Age\r\n                  </label>\r\n                  <input  className=\"form-control\" \r\n                          name=\"age\" \r\n                          type=\"number\"\r\n                          value={age}\r\n                          onChange={e => this._handleChangeValue(e)}  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label \" htmlFor=\"avatar\">\r\n                    Avatar\r\n                  </label>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <input  name=\"image\" \r\n                                type=\"file\" \r\n                                onChange={e => this._handleChangeFile(e)}\r\n                        />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group pt-3 mb-5\">\r\n                  <div>\r\n                    <button className=\"btn btn-primary\" \r\n                            name=\"submit\" \r\n                            type=\"submit\"\r\n                            onClick={e => this._handleSubmitRegister(e)}>\r\n                      Register\r\n                      {requestingRegister ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.users\r\n});\r\n\r\nexport default connect( mapStateToProps, null)(Register);","import React, { Fragment, Component } from 'react';\r\nimport { updateInfoUser} from '../../actions/user';\r\nimport { connect} from 'react-redux';\r\nimport { URI_FETCH} from '../../constant';\r\n\r\nclass FormUser extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      fullname:'',\r\n      email: '',\r\n      password: '',\r\n      age: '',\r\n      image: null,\r\n      userID: ''\r\n    }\r\n  }\r\n  \r\n\r\n  _handleChangeValue = e => {\r\n    const { name, value } = e.target;\r\n    if(value < 1){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  _handleChangeFile = e => {\r\n    this.setState({\r\n      image: e.target.files[0],\r\n      nameImage: e.target.files[0].name\r\n    })\r\n  }\r\n\r\n  _handleSubmitUpdate = e => {\r\n    e.preventDefault();\r\n\r\n    const { userID, fullname, email, password, age, image} = this.state;\r\n    updateInfoUser(userID, fullname, email, password, age, image)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const { userID } = prevState;\r\n    const { isUser } = this.props;\r\n\r\n    if(isUser && userID !== isUser._id){\r\n      const { fullname, email, password, age, image, _id } = isUser;\r\n      this.setState({\r\n        fullname, email, password, age, userID: _id, nameImage: image\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { fullname, email, age, nameImage} = this.state;\r\n    let { users: {updatingInfo} } = this.props;\r\n\r\n    return(\r\n      <Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <form method=\"post\">\r\n              <div className=\"form-group \">\r\n                <label className=\"control-label requiredField\" htmlFor=\"fullname\">\r\n                  Fullname\r\n                  <span className=\"asteriskField\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <input  className=\"form-control\" \r\n                        name=\"fullname\" \r\n                        type=\"text\"\r\n                        value={fullname}\r\n                        onChange={e => this._handleChangeValue(e)} />\r\n              </div>\r\n              <div className=\"form-group \">\r\n                <label className=\"control-label requiredField\" htmlFor=\"email\">\r\n                  Email\r\n                  <span className=\"asteriskField\">\r\n                    *\r\n                  </span>\r\n                </label>\r\n                <input  className=\"form-control\" \r\n                        name=\"email\" \r\n                        type=\"text\"\r\n                        value={email}\r\n                        onChange={e => this._handleChangeValue(e)}  />\r\n              </div>\r\n              <div className=\"form-group \">\r\n                <label className=\"control-label \" htmlFor=\"age\">\r\n                  Age\r\n                </label>\r\n                <input  className=\"form-control\" \r\n                        name=\"age\" \r\n                        type=\"number\"\r\n                        value={age}\r\n                        onChange={e => this._handleChangeValue(e)}  />\r\n              </div>\r\n              <div className=\"form-group \">\r\n                <label className=\"control-label \" htmlFor=\"avatar\">\r\n                  Avatar\r\n                </label>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                      <input  name=\"image\" \r\n                              type=\"file\" \r\n                              onChange={e => this._handleChangeFile(e)}\r\n                      />\r\n                  </div>\r\n                  <div className=\"col-md-6 d-flex\">\r\n                      <img className=\"ml-auto rounded-circle\" \r\n                      src={nameImage && nameImage.length > 0 ? `${URI_FETCH}/images/users/${nameImage}` : \"https://via.placeholder.com/150\"}\r\n                      alt=\"\" width={150}\r\n                      />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group pt-3 mb-5\">\r\n                <div>\r\n                  <button className=\"btn btn-primary\" \r\n                          name=\"submit\" \r\n                          type=\"submit\"\r\n                          onClick={e => this._handleSubmitUpdate(e)}>\r\n                    Update\r\n                    {updatingInfo ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>        \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.users\r\n});\r\nexport default connect(mapStateToProps, null) (FormUser);","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormUser from './User-updateform';\r\n\r\nclass User extends Component {\r\n\r\n  state = {\r\n    isUser: ''\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let { isUser: isUserPrevState} = prevState;\r\n    const { isUser } = this.props.users; //STORE\r\n\r\n    if( isUser && isUser !== isUserPrevState) {\r\n      this.setState({\r\n        isUser\r\n      })\r\n    }\r\n}\r\n\r\n  render(){\r\n    const {isUser} = this.state;\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid\">\r\n          <h2 className=\"mb-3\">My Account</h2>\r\n          <FormUser isUser={isUser}/>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  users: state.users\r\n});\r\nexport default connect(mapStateToProps, null)(User);","import React, { Fragment, Component } from 'react';\r\nimport { URI_FETCH} from '../../constant/index';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatCurrency } from '../../helpers'\r\n\r\nclass ProductDetail extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  _handleRemove = e => {\r\n    e.preventDefault();\r\n    const { product: { _id: productID}, _handlecRemoveProduct} = this.props;\r\n    _handlecRemoveProduct(productID);\r\n  }\r\n\r\n  _handleUpdate = e => {\r\n    e.preventDefault();\r\n    const {product: { _id: productID}, _handleGetInfoPrepareUpdate} = this.props;\r\n    _handleGetInfoPrepareUpdate(productID);\r\n  }\r\n\r\n  render(){\r\n    const { product, index, listCategories, requestingRemoveProduct} = this.props;\r\n    let category = listCategories.find(category => Object.is(category._id, product.categoryID));\r\n    return(\r\n      <Fragment>\r\n        <tr key={index}>\r\n          <th scope=\"row\">{index + 1}</th>    \r\n          <td>{product.title && product.title}</td>\r\n          <td style={{maxWidth: '600px'}}>{product.description && product.description}</td>\r\n          <td>{product.price && formatCurrency(product.price)}</td>\r\n          <td>{category && category.title}</td>\r\n          <td>\r\n            <img src={product.image ? `${URI_FETCH}/images/products/${product.image}` : 'https://via.placeholder.com/100' } \r\n            alt=\"\"\r\n            style={{width:100}}/>\r\n          </td>\r\n          <td>\r\n            <button type=\"button\" className=\"btn btn-danger\"\r\n              onClick={ e =>this._handleRemove(e)}\r\n            >\r\n              Remove\r\n              {requestingRemoveProduct && product._id === requestingRemoveProduct ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n            </button>\r\n            <button type=\"button\" className=\"btn ml-3\" style={{padding: 0}}\r\n              onClick={ e =>this._handleUpdate(e)}\r\n            >\r\n              <Link to=\"/dashboard/products/create\" className=\"btn btn-info\" >Detail</Link>\r\n              \r\n            </button>\r\n            \r\n          </td>\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductDetail;","import React, { Fragment, Component } from 'react';\r\n\r\nclass ProductsFilter extends Component {\r\n  \r\n  state = {\r\n    textKey: '',\r\n    sort: ''\r\n  }\r\n  \r\n  _handleFilter = e => {\r\n    const { _handleFilterProduct } = this.props;\r\n    this.setState({\r\n      textKey: e.target.value\r\n    });\r\n    _handleFilterProduct(e.target.value)\r\n  }\r\n\r\n  _handleChangeSort = e => {\r\n    const { _handleChangeSortProduct } = this.props;\r\n    this.setState({\r\n      sort: e.target.value\r\n    });\r\n\r\n    _handleChangeSortProduct(e.target.value)\r\n  }\r\n\r\n  render(){\r\n\r\n    const { textKey, sort } = this.state;\r\n\r\n    return(\r\n      <Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <input \r\n              className=\"form-control\" \r\n              type=\"text\" \r\n              name=\"textKey\" \r\n              value={textKey}\r\n              onChange={e => this._handleFilter(e)}\r\n              placeholder=\"Enter product name\">\r\n            </input>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <select \r\n              className=\"form-control\" \r\n              name=\"sort\"\r\n              onChange={e => this._handleChangeSort(e)}\r\n              value={sort}\r\n              style={{cursor: 'pointer'}}\r\n              >\r\n              <option value=\"\">Default sorting</option>\r\n              <option value=\"lowest\">Low to Hight</option>\r\n              <option value=\"highest\">Hight to Low</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductsFilter;","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProducts, removeProduct, getInfoProduct } from '../../actions/products';\r\nimport { Link } from 'react-router-dom';\r\nimport ProductsDetail from './Products-detail';\r\nimport ProductsFilter from './Products-filter';\r\nimport Pagination from '../Pagination';\r\n\r\nclass Products extends Component {\r\n\r\n  state = {\r\n    startIndex: '',\r\n    endIndex: '',\r\n    totalRecords: '',\r\n    totalPages: '',\r\n    pageLimit: 6,\r\n    currentPage: '',\r\n    listProduct: null\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    getProducts();\r\n  }\r\n\r\n  _handlecRemoveProduct = productID => {\r\n    removeProduct(productID);\r\n  }\r\n\r\n  _handleGetInfoPrepareUpdate = productID => {\r\n    getInfoProduct(productID);\r\n  }\r\n\r\n  showProducts = listProduct => {\r\n    const { products: { listCategories, requestingRemoveProduct, requestingGetInfoProduct }} = this.props;\r\n    var result = null;\r\n    if(listProduct.length > 0){\r\n      result = listProduct.map((product, index)=> (\r\n        <ProductsDetail \r\n          product={product}\r\n          key={index}\r\n          index={index}\r\n          listCategories={listCategories}\r\n          _handlecRemoveProduct={this._handlecRemoveProduct}\r\n          requestingRemoveProduct={requestingRemoveProduct}\r\n          _handleGetInfoPrepareUpdate={this._handleGetInfoPrepareUpdate}\r\n          requestingGetInfoProduct={requestingGetInfoProduct}\r\n        />\r\n      ))\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  onChangePage = data => {\r\n    this.setState({\r\n      totalPages: data.totalPages,\r\n      currentPage: data.page,\r\n      startIndex: data.startIndex,\r\n      endIndex: data.endIndex\r\n    });\r\n  }\r\n\r\n  _handleFilterProduct = textkey => {\r\n    const { listProduct } = this.state;\r\n    \r\n    let regexDemo = new RegExp(textkey, 'ig');\r\n    let newListProduct = listProduct.filter(product => {\r\n      return product.title.search(regexDemo) !== -1;\r\n    });\r\n     this.setState({\r\n      listProduct: newListProduct\r\n    })\r\n  }\r\n\r\n  _handleChangeSortProduct = sort => {\r\n    const { listProduct } = this.state;\r\n    switch(sort){\r\n      case 'lowest': {\r\n        let newListProduct = listProduct.sort(( a, b ) => a.price - b.price);\r\n        return this.setState({\r\n          listProduct: newListProduct\r\n        })\r\n      }\r\n      case 'highest': {\r\n        let newListProduct = listProduct.sort(( a, b) => b.price - a.price);\r\n        return this.setState({\r\n          listProduct: newListProduct\r\n        })\r\n      }\r\n      default: {\r\n        return listProduct;\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { listProduct: listProductsPrevState } = prevState;\r\n    const { listProduct } = this.props.products; //STORE\r\n\r\n    if( listProduct && listProduct !== listProductsPrevState) {\r\n      this.setState({\r\n        listProduct\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { startIndex, endIndex, pageLimit, currentPage, totalPages, listProduct, sort} = this.state;\r\n    let rowsPerPage = [];\r\n    if(listProduct && listProduct.length > 0){\r\n      rowsPerPage = listProduct.slice(startIndex, endIndex + 1);\r\n    }\r\n\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid\">\r\n          <h2>Products</h2>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <Link to=\"/dashboard/products/create\" className=\"btn btn-primary mb-3\">New</Link>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n            <ProductsFilter\r\n              _handleFilterProduct={this._handleFilterProduct}\r\n              sort={sort}\r\n              _handleChangeSortProduct={this._handleChangeSortProduct}\r\n            />\r\n            </div>\r\n          </div>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Price</th>\r\n                <th scope=\"col\">Category</th>\r\n                <th scope=\"col\">Image</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                listProduct && listProduct.length > 0 && this.showProducts(rowsPerPage)\r\n              }\r\n            </tbody>\r\n          </table>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12 box_pagination_info text-right\">\r\n              <p>\r\n                {listProduct && listProduct.length > 0 && listProduct.length} results | page {currentPage}/{totalPages}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-12 d-flex justify-content-center\">\r\n              {\r\n                listProduct && listProduct.length > 0 ?\r\n                  <Pagination\r\n                    totalRecords={ listProduct.length}\r\n                    pageLimit={pageLimit || 10}\r\n                    initialPage={1}\r\n                    pagesToShow={5}\r\n                    onChangePage={this.onChangePage}\r\n                  /> : ''\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products\r\n});\r\nexport default connect(mapStateToProps, null)(Products);","import React, { Fragment, Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CategoriesDetail extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state= {}\r\n  }\r\n\r\n  _handleRemove = e => {\r\n    e.preventDefault();\r\n    const { category:{ _id: categoryID}, _handleRemoveCategory} = this.props;\r\n    console.log(categoryID)\r\n    _handleRemoveCategory(categoryID);\r\n  }\r\n\r\n  _handleUpdate = e => {\r\n    e.preventDefault();\r\n    const { category: { _id: categoryID}, _handleGetInfoPrepareUpdate} = this.props;\r\n    _handleGetInfoPrepareUpdate(categoryID);\r\n  }\r\n\r\n  render(){\r\n    const { category, index, requestingRemoveCategory} = this.props;\r\n    let products = category.products.map(item => item.title);\r\n    // console.log(av.join())\r\n    return(\r\n      <Fragment>\r\n        <tr key={index}>\r\n          <th scope=\"row\">{index + 1}</th>    \r\n          <td>{category.title}</td>\r\n          <td>{category.description}</td>\r\n          <td>{products.join(', ')}</td>\r\n          <td>\r\n            <button type=\"button\" className=\"btn btn-danger\"\r\n              onClick={ e =>this._handleRemove(e)}\r\n            >\r\n              Remove\r\n              {requestingRemoveCategory && category._id === requestingRemoveCategory ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n            </button>\r\n            <button type=\"button\" className=\"btn ml-3\" style={{padding: 0}}\r\n              onClick={ e =>this._handleUpdate(e)}\r\n            >\r\n              <Link to=\"/dashboard/categories/create\" className=\"btn btn-info\" >Detail</Link>\r\n              \r\n              {/* {requestingGetInfoCategory && category._id === requestingGetInfoCategory ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''} */}\r\n            </button>\r\n            {/* <Link to=\"/dashboard/categories/create\" className=\"btn btn-primary mb-3\" onClick={ e =>this._handleUpdate(e)}>Detail</Link> */}\r\n          </td>\r\n        </tr>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoriesDetail;","import React, { Fragment, Component } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport { getCategories, removeCategory, getInfoCategory } from '../../actions/categories';\r\nimport { Link } from 'react-router-dom';\r\nimport CategoriesDetail from './Categories-detail';\r\n\r\nclass Categories extends Component {\r\n  componentDidMount = async () => {\r\n    getCategories();\r\n  }\r\n\r\n  _handleRemoveCategory = categoryID => {\r\n    removeCategory(categoryID);\r\n  }\r\n\r\n  _handleGetInfoPrepareUpdate = categoryID => {\r\n    getInfoCategory(categoryID);\r\n  }\r\n\r\n  render(){\r\n    const { categories: { listCategories, requestingRemoveCategory, requestingGetInfoCategory }} = this.props;\r\n    console.log({ _: listCategories})\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid\">\r\n          <h2>Categories</h2>\r\n          <Link to=\"/dashboard/categories/create\" className=\"btn btn-primary mb-3\">New</Link>\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Title</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Products</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                listCategories && listCategories.length > 0 && listCategories.map((category, index)=> (\r\n                  <CategoriesDetail \r\n                    category={category}\r\n                    key={index}\r\n                    index={index}\r\n                    _handleRemoveCategory={this._handleRemoveCategory}\r\n                    requestingRemoveCategory={requestingRemoveCategory}\r\n                    _handleGetInfoPrepareUpdate={this._handleGetInfoPrepareUpdate}\r\n                    requestingGetInfoCategory={requestingGetInfoCategory}\r\n                  />\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  categories: state.categories\r\n});\r\nexport default connect(mapStateToProps, null)(Categories);","import React, { Fragment, Component } from 'react';\r\nimport { addCategory, updateInfoCategory } from '../../actions/categories';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CategoriesCreate extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    isUpdate: false\r\n  }\r\n\r\n  _handleChangeValue = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n    console.log({ e: e.target.value})\r\n  }\r\n  \r\n  _handleSubmitAdd = e => {\r\n    e.preventDefault();\r\n    \r\n    const { title, description } = this.state;\r\n    const { history } = this.props;\r\n    console.log({ history})\r\n    addCategory( title, description, history);\r\n  }\r\n\r\n  _handleSubmitUpdate = e => {\r\n    e.preventDefault();\r\n    \r\n    const { history } = this.props;\r\n    const {title, description, categoryID} = this.state;\r\n    updateInfoCategory( categoryID, title, description, history );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const { categoryID } = prevState;\r\n    const { infoCategoryPrepareUpdate} = this.props.categories;\r\n\r\n    if(infoCategoryPrepareUpdate && categoryID !== infoCategoryPrepareUpdate._id){\r\n      const { title, description, _id} = infoCategoryPrepareUpdate;\r\n      this.setState({\r\n        title, description, isUpdate: true, categoryID: _id\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { categories: { requestingAddCategory, updatingInfo }} = this.props;\r\n    const { title, description, isUpdate} = this.state;\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid\">\r\n        <h2>Categories</h2>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n              <form method=\"post\">\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"title\">\r\n                    Title\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input className=\"form-control\" name=\"title\" type=\"text\"\r\n                    value={title}\r\n                    onChange={e => this._handleChangeValue(e)} \r\n                  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"description\">\r\n                    Description\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <textarea className=\"form-control\" cols={40} name=\"description\" rows={10}\r\n                    value={description || ''}\r\n                    onChange={e => this._handleChangeValue(e)} \r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <div>\r\n                    {\r\n                      !isUpdate ?\r\n                      <button className=\"btn btn-primary \" name=\"submit\" type=\"submit\"\r\n                          onClick={ e => this._handleSubmitAdd(e)}\r\n                        >\r\n                          Add\r\n                        {requestingAddCategory ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                      </button> :\r\n                        <button className=\"btn btn-primary \" name=\"submit\" type=\"submit\"\r\n                          onClick={ e => this._handleSubmitUpdate(e)}\r\n                        >\r\n                          Update\r\n                        {updatingInfo ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                      </button>\r\n                    }\r\n                    \r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  categories: state.categories\r\n});\r\nexport default connect(mapStateToProps, null)(CategoriesCreate);","import React, { Fragment, Component } from 'react';\r\nimport { addProduct, updateInfoProduct } from '../../actions/products';\r\nimport { getCategories} from '../../actions/categories';\r\nimport { connect } from 'react-redux';\r\nimport { URI_FETCH } from '../../constant/index';\r\n\r\nclass ProductCreate extends Component {\r\n\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n    categoryID: '',\r\n    image: null,\r\n    isUpdate: false,\r\n    productID: '',\r\n    nameImage: ''\r\n  }\r\n\r\n  _handleChangeValue = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  _handleChangeFile = e => {\r\n    this.setState({\r\n      image: e.target.files[0],\r\n      nameImage: e.target.files[0].name\r\n    })\r\n  }\r\n  \r\n  _handleSubmitAdd = e => {\r\n    e.preventDefault();\r\n\r\n    const { title, description, price, image, categoryID } = this.state;\r\n    const {  history } = this.props;\r\n    addProduct(title, description, price, categoryID, image, history);\r\n  }\r\n\r\n  _handleSubmitUpdate = e => {\r\n    e.preventDefault();\r\n    const { title, description, price, categoryID, productID, image } = this.state;\r\n    const { history } = this.props;\r\n    updateInfoProduct(productID, title, description, price, categoryID, image, history);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    const { productID } = prevState;\r\n    const { infoProductPrepareUpdate } = this.props.products;\r\n\r\n    if(infoProductPrepareUpdate && productID !== infoProductPrepareUpdate._id){\r\n      const { title, description, price, categoryID, image, _id } = infoProductPrepareUpdate;\r\n      this.setState({\r\n        title, description, price, categoryID, isUpdate: true, productID: _id, nameImage: image\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    getCategories();\r\n  }\r\n\r\n  render(){\r\n    const { categories:{ listCategories} } = this.props;\r\n    const { title, description, price, isUpdate, nameImage} = this.state;\r\n    const { products: { requestingAddProduct, updatingInfo } } = this.props;\r\n\r\n    return(\r\n      <Fragment>\r\n        <div className=\"container-fluid\">\r\n          <h2>Products</h2>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-sm-6 col-xs-12\">\r\n              <form method=\"post\">\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"title\">\r\n                    Title\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input className=\"form-control\" name=\"title\" type=\"text\"\r\n                    value={title}\r\n                    onChange={ e => this._handleChangeValue(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"description\">\r\n                    Description\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <textarea className=\"form-control\" cols={40} name=\"description\" rows={10}\r\n                    value={description || ''}\r\n                    onChange={e => this._handleChangeValue(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"price\">\r\n                    Price\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <input className=\"form-control\" name=\"price\" type=\"number\" \r\n                    value={price}\r\n                    onChange={ e => this._handleChangeValue(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label requiredField\" htmlFor=\"category\">\r\n                    Category\r\n                    <span className=\"asteriskField\">\r\n                      *\r\n                    </span>\r\n                  </label>\r\n                  <select className=\"select form-control\"  name=\"categoryID\"\r\n                    onChange={ e => this._handleChangeValue(e)}\r\n                  >\r\n                    <option value=\"default\" key='default'>\r\n                      Uncategorized\r\n                    </option>\r\n                    {\r\n                      listCategories && listCategories.map((category, index) => (\r\n                        <option value={category._id} key={index}>\r\n                          {category.title}\r\n                        </option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group \">\r\n                  <label className=\"control-label \" htmlFor=\"image\">\r\n                    Image\r\n                  </label>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">    \r\n                    <input \r\n                        name=\"image\" \r\n                        type=\"file\" \r\n                        onChange={ e => this._handleChangeFile(e)}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 d-flex\">\r\n                      <img className=\"ml-auto\" \r\n                      src={!isUpdate ? \"https://via.placeholder.com/150\" :\r\n                          (nameImage && nameImage.length > 0 ? `${URI_FETCH}/images/products/${nameImage}` : \"https://via.placeholder.com/150\")\r\n                      }\r\n                      alt=\"\" width={150}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"form-group mb-5\">\r\n                  <div>\r\n                    {!isUpdate ? \r\n                    <button className=\"btn btn-primary \" name=\"submit\" type=\"submit\"\r\n                      onClick={ e => this._handleSubmitAdd(e)}\r\n                    >\r\n                      Add\r\n                      {requestingAddProduct ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                    </button> :\r\n                    <button className=\"btn btn-primary \" name=\"submit\" type=\"submit\"\r\n                      onClick={ e => this._handleSubmitUpdate(e)}\r\n                    >\r\n                      Update\r\n                      {updatingInfo ? <span className=\"spinner-border spinner-border-sm ml-2\" role=\"status\" aria-hidden=\"true\"></span> : ''}\r\n                    </button>\r\n                    }\r\n                    \r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.products,\r\n  categories: state.categories\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ProductCreate);","import React, { Fragment, Component } from 'react';\r\nimport {URI_FETCH} from '../../constant';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../../actions/user';\r\n\r\nclass UserMenu extends Component {\r\n\r\n  _handleLogout = () => {\r\n    logout();\r\n  }\r\n  render(){\r\n    const { isUser } = this.props;\r\n    return(\r\n      <Fragment>\r\n        <div className='user-menu'>\r\n          <img className=\"rounded-circle\" src={isUser.image ? `${URI_FETCH}/images/users/${isUser.image}` : 'https://via.placeholder.com/100' } \r\n            alt=\"\"\r\n            width={50}\r\n          />\r\n          <div className=\"card\" style={{width: '18rem'}}>\r\n            <div className=\"card-user\">\r\n              <div className=\"card-user-img\">\r\n                <img className=\"rounded-circle\" src={isUser.image ? `${URI_FETCH}/images/users/${isUser.image}` : 'https://via.placeholder.com/100' } \r\n                alt=\"\"\r\n                width={50}\r\n              />\r\n              </div>\r\n              <div className=\"card-user-info\">\r\n                <p className=\"card-user-info-title\">{isUser.fullname}</p>\r\n                <p className=\"card-user-info-email\">{isUser.email}</p>\r\n              </div>\r\n            </div>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item list-group-item-action\" style={{borderWidth: '0', borderRadius:'0', padding: '0'}}>\r\n                <Link to=\"/dashboard/my-account\" style={{padding: '.75rem 1.25rem', display: 'block'}}><i className=\"fa fa-user-circle\"></i>Profile</Link>\r\n              </li>\r\n              <li className=\"list-group-item list-group-item-action\" onClick={()=> this._handleLogout()} style={{borderWidth: '0'}}>\r\n                <i className=\"fa fa-sign-out\"></i>Logout\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserMenu;","import React, { Fragment, Component } from 'react';\r\nimport { URI_FETCH } from '../../constant';\r\nimport { removeCart } from '../../actions/carts';\r\nimport { connect } from 'react-redux';\r\nimport { formatCurrency } from '../../helpers/formatCurrency'\r\n\r\nclass CartItem extends Component {\r\n\r\n  _handleRemoveItem = e => {\r\n    e.preventDefault();\r\n    const { item: { product: { _id: productID} }, removeCart} = this.props;\r\n    removeCart(productID);\r\n    // console.log({ productID });\r\n  }\r\n  render(){\r\n  const { item } = this.props;\r\n    return(\r\n      <Fragment>\r\n        <li className=\"list-group-item d-flex\">\r\n          <img className=\"rounded mr-2\" \r\n          src={\r\n            item.product.image ? `${URI_FETCH}/images/products/${item.product.image}` :\r\n            'https://via.placeholder.com/100'\r\n          }\r\n          alt=\"\" width={100}/>\r\n          <p className=\"d-inline font-weight-bold\">{item.product && item.product.title} </p>\r\n          <span className=\"ml-1\"> | { item.product.price && formatCurrency(item.product.price)}</span>\r\n          <strong  className=\"ml-1\">x {item.quantity}</strong>\r\n          <button className=\"btn btn-danger ml-auto align-self-start rounded-circle\" style={{padding: \".3rem .75rem\"}}\r\n            onClick={e => this._handleRemoveItem(e)}\r\n          >\r\n            x\r\n          </button>\r\n        </li>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { removeCart })(CartItem);","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CartItem from './CartItem';\r\nimport {formatCurrency} from '../../helpers/formatCurrency'\r\n\r\nclass Carts extends Component {\r\n\r\n  render(){\r\n    const { carts: { carts, totalPrice, totalAmount} } = this.props;\r\n    console.log({ carts, totalPrice})\r\n    return(\r\n      <Fragment>\r\n        <div className=\"cart-menu\">\r\n          <i className=\"fa fa-opencart\"></i> \r\n          <span>{carts.length}</span>\r\n          <ul className=\"list-group\">\r\n            { \r\n              carts.length > 0 ? carts.map((item, index) => (\r\n                <CartItem item={item} key={index}/>\r\n              )) :\r\n              <li className=\"list-group-item\">\r\n                No products in the Cart.\r\n              </li>\r\n            }\r\n            <li className=\"list-group-item d-flex active\">\r\n              <span>\r\n                <b>Total Price:</b> {totalPrice ? formatCurrency(totalPrice) : formatCurrency(totalPrice)}\r\n              </span>\r\n              <span className=\"d-inline ml-auto\">\r\n                <b>Total Amount:</b> {totalAmount ? `${totalAmount} items` : `${totalAmount} item`}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  carts: state.carts\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Carts);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { PublicRoute, PrivateRoute } from './helpers';\nimport { Dashboard } from './components';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Register from './components/user/Register';\nimport User from './components/user/User';\nimport Products from './components/products/Products';\nimport Categories from './components/categories/Categories';\nimport CategoriesCreate from './components/categories/Categories-create';\nimport ProductsCreate from './components/products/Products-create';\nimport { connect } from 'react-redux';\nimport UserMenu from './components/user/User-menu';\nimport Carts from './components/carts/Carts';\n\nclass App extends Component {\n\n  render(){\n    const { users} = this.props;\n    console.log({ users})\n    return (\n    <>\n      <Router>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link className=\"navbar-brand\" to=\"/\">MernStack</Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n            <ul className=\"navbar-nav w-100 align-items-center\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n              </li>\n              <li className=\"nav-item ml-auto d-flex align-items-center\" >\n                {\n                  users.isUser ? <Carts/> : ''\n                }\n                {\n                  users.isUser ? <UserMenu isUser={users.isUser}/> :\n                  <Link className=\"btn btn-outline-success\" to=\"/login\" style={{margin: '.5rem 0'}}>Login</Link>\n                }\n              </li>\n            </ul>\n          </div>\n        </nav>\n        <PublicRoute exact path='/' component={Home}/>\n        <PublicRoute path='/login' component={Login}/>\n        <PublicRoute path='/users' component={Register}/>\n        <PrivateRoute path='/dashboard' component={Dashboard}/>\n        <PrivateRoute path='/dashboard/my-account' component={User}/>\n        <PrivateRoute exact path='/dashboard/products' component={Products}/>\n        <PrivateRoute exact path='/dashboard/categories' component={Categories}/>\n        <PrivateRoute path='/dashboard/categories/create' component={CategoriesCreate}/>\n        <PrivateRoute path='/dashboard/products/create' component={ProductsCreate}/>\n      </Router>\n    </>\n  );\n  }\n  \n}\n\nconst mapStateToProps = state => ({\n  users: state.users\n});\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport STORE from './stores';\n\nimport { refreshApp } from './actions/user';\n\nrefreshApp();\nReactDOM.render(\n  <Provider store={STORE}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}